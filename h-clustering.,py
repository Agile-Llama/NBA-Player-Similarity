import scipy.cluster.hierarchy as shc
from matplotlib import pyplot as plt
import config
import pandas as pd
from sklearn.decomposition import PCA
from sklearn.preprocessing import StandardScaler
import numpy as np

def clean_dataset(df):
    assert isinstance(df, pd.DataFrame), "df needs to be a pd.DataFrame"
    df.dropna(inplace=True)
    indices_to_keep = ~df.isin([np.nan, np.inf, -np.inf]).any(1)
    return df[indices_to_keep].astype(np.float64)

df = pd.read_csv(config.final_dataset)
x = df
x = x.drop(['Pos','Player', 'G', 'MP', 'Index', ], axis=1)
x = clean_dataset(x)
x = StandardScaler().fit_transform(x)

pca = PCA(n_components=2)
principal_components = pca.fit_transform(x)
principal_df = pd.DataFrame(data = principal_components , columns = ['principal component 1', 'principal component 2'])

def cluster():
    plt.figure(figsize=(10, 7))  
    plt.title("Dendrograms")  

    labels = df['Player']
    labels_list = labels.to_list()

    dend = shc.dendrogram(shc.linkage(principal_components, method='ward'), labels=labels_list)
    plt.show()

cluster()

